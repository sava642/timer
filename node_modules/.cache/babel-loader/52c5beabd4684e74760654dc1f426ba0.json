{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/react 26.03/demo/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      isCounting: false\n    };\n\n    this.handleStart = () => {\n      setInterval(() => this.setState({\n        count: this.state.count += 1\n      }), 1000);\n      localStorage.setItem('timerStorage', this.state.count);\n    };\n\n    this.handleStorage = () => {\n      const {\n        user,\n        rememberMe\n      } = this.state;\n      localStorage.setItem('rememberMe', rememberMe);\n      localStorage.setItem('user', rememberMe ? user : '');\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"страница обновилась\");\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), !this.state.isCounting ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/savostiny/Desktop/react 26.03/demo/src/App.js"],"names":["React","App","Component","state","count","isCounting","handleStart","setInterval","setState","localStorage","setItem","handleStorage","user","rememberMe","componentDidMount","console","log","componentDidUpdate","componentWillUnmount","render","handleStop","handleReset"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,UAAU,EAAE;AAFN,KADuC;;AAAA,SAK/CC,WAL+C,GAKjC,MAAM;AAClBC,MAAAA,WAAW,CAAC,MACV,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,IAAoB;AAA7B,OAAd,CADS,EAER,IAFQ,CAAX;AAGAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAAKP,KAAL,CAAWC,KAAhD;AACD,KAV8C;;AAAA,SAW/CO,aAX+C,GAW/B,MAAM;AACpB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAuB,KAAKV,KAAlC;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCG,UAAnC;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BG,UAAU,GAAGD,IAAH,GAAU,EAAjD;AACD,KAf8C;AAAA;;AAiB/CE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAED;;AAGDC,EAAAA,kBAAkB,GAAG,CAEpB;;AAEDC,EAAAA,oBAAoB,GAAG,CAAG;;AAG1BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,KAAKhB,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAAC,KAAKD,KAAL,CAAWE,UAAZ,gBACC;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAQ,QAAA,OAAO,EAAE,KAAKc,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAQE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA3C8C","sourcesContent":["\nimport React from 'react';\n\nexport default class App extends React.Component {\n  state = {\n    count: 0,\n    isCounting: false,\n  };\n  handleStart = () => {\n    setInterval(() => (\n      this.setState({ count: this.state.count += 1 })\n    ), 1000)\n    localStorage.setItem('timerStorage', this.state.count);\n  }\n  handleStorage = () => {\n    const { user, rememberMe } = this.state;\n    localStorage.setItem('rememberMe', rememberMe);\n    localStorage.setItem('user', rememberMe ? user : '');\n  };\n\n  componentDidMount() {\n    console.log(\"страница обновилась\")\n\n  }\n\n\n  componentDidUpdate() {\n\n  }\n\n  componentWillUnmount() { }\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>React Timer</h1>\n        <h3>{this.state.count}</h3>\n        {!this.state.isCounting ? (\n          <button onClick={this.handleStart}>Start</button>\n        ) : (\n          <button onClick={this.handleStop}>Stop</button>\n        )}\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}